services:
  # OctoPrint Instance 1 - Prusa Printer 1
  octoprint1:
    image: octoprint/octoprint:latest
    container_name: octoprint_prusa1
    restart: unless-stopped
    privileged: true
    ports:
      - "5001:80"
    volumes:
      - octoprint1_data:/octoprint
      - ./uploads:/uploads
    devices:
      - "/dev/ttyACM0:/dev/ttyACM0"  # Prusa Printer 1
    environment:
      - ENABLE_MJPG_STREAMER=true
      - MJPG_STREAMER_INPUT=-y -n -r 640x480 -f 10
    networks:
      - octoprint_network

  # OctoPrint Instance 2 - Prusa Printer 2  
  octoprint2:
    image: octoprint/octoprint:latest
    container_name: octoprint_prusa2
    restart: unless-stopped
    privileged: true
    ports:
      - "5002:80"
    volumes:
      - octoprint2_data:/octoprint
      - ./uploads:/uploads
    devices:
      - "/dev/ttyACM1:/dev/ttyACM1"  # Prusa Printer 2
    environment:
      - ENABLE_MJPG_STREAMER=true
      - MJPG_STREAMER_INPUT=-y -n -r 640x480 -f 10
    networks:
      - octoprint_network

  # OctoPrint Instance 3 - Prusa Printer 3
  octoprint3:
    image: octoprint/octoprint:latest
    container_name: octoprint_prusa3
    restart: unless-stopped
    privileged: true
    ports:
      - "5003:80"
    volumes:
      - octoprint3_data:/octoprint
      - ./uploads:/uploads
    devices:
      - "/dev/ttyACM2:/dev/ttyACM2"  # Prusa Printer 3
    environment:
      - ENABLE_MJPG_STREAMER=true
      - MJPG_STREAMER_INPUT=-y -n -r 640x480 -f 10
    networks:
      - octoprint_network

  # Main Web Application Backend
  backend:
    build: ./backend
    container_name: octoprint_farm_backend
    restart: unless-stopped
    privileged: true  # Required for USB/Serial access
    ports:
      - "3001:3001"
    volumes:
      - ./database:/app/database
      - ./uploads:/app/uploads
      - /dev:/dev  # Mount all devices for USB detection
    devices:
      - "/dev/ttyUSB0:/dev/ttyUSB0"  # FT232 adapter for Sonoff
      - "/dev/ttyUSB1:/dev/ttyUSB1"  # Backup if adapter on different port
    environment:
      - NODE_ENV=production
      - PORT=3001
      - DATABASE_PATH=/app/database/database.db
      - FRONTEND_URL=http://3dprinters:3000
      - GITHUB_CLIENT_ID=${GITHUB_CLIENT_ID}
      - GITHUB_CLIENT_SECRET=${GITHUB_CLIENT_SECRET}
      # The OAuth callback URL GitHub should redirect to after login. Set this to the
      # publicly reachable URL for your deployment, e.g. https://printmeister.duckdns.org/api/auth/github/callback
      - GITHUB_CALLBACK_URL=${GITHUB_CALLBACK_URL:-http://3dprinters:3001/api/auth/github/callback}
      - SESSION_SECRET=${SESSION_SECRET}
      - EMAIL_USER=${EMAIL_USER}
      - EMAIL_PASS=${EMAIL_PASS}
      - GITHUB_ORG_NAME=${GITHUB_ORG_NAME}
      - OCTOPRINT1_URL=http://octoprint1:80
      - OCTOPRINT2_URL=http://octoprint2:80
      - OCTOPRINT3_URL=http://octoprint3:80
      - OCTOPRINT1_API_KEY=${OCTOPRINT1_API_KEY}
      - OCTOPRINT2_API_KEY=${OCTOPRINT2_API_KEY}
      - OCTOPRINT3_API_KEY=${OCTOPRINT3_API_KEY}
      - SONOFF_SERIAL_PORT=${SONOFF_SERIAL_PORT:-/dev/ttyUSB0}
      - SONOFF_BAUDRATE=${SONOFF_BAUDRATE:-115200}
    depends_on:
      - octoprint1
      - octoprint2
      - octoprint3
    networks:
      - octoprint_network

  # Frontend Web Application
  frontend:
    build: ./frontend
    container_name: octoprint_farm_frontend
    restart: unless-stopped
    ports:
      - "3000:80"
    depends_on:
      - backend
    networks:
      - octoprint_network

volumes:
  octoprint1_data:
  octoprint2_data:
  octoprint3_data:

networks:
  octoprint_network:
    driver: bridge
